{
    "0x49C1F6DC": {
        "name": "REGISTER_RAW_KEYMAP",
        "params": [
            {
                "name": "keymapName",
                "type": "const char*",
                "description": "A **unique** name that the keymap will be bound to, duplicates will result in the keymap not being registered."
            },
            {
                "name": "onKeyDown",
                "type": "func",
                "description": "The function to run when the key is being pressed, or `nil`."
            },
            {
                "name": "onKeyUp",
                "type": "func",
                "description": "The function to run when the key is no longer being pressed, or `nil`."
            },
            {
                "name": "rawKeyIndex",
                "type": "int",
                "description": "The virtual key to bind this keymap to, see a list [here](https://learn.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes)"
            },
            {
                "name": "canBeDisabled",
                "type": "BOOL",
                "description": "If calls to [DISABLE_RAW_KEY_THIS_FRAME](#\\_0x8BCF0014) will disable this keymap, if a keymap was disabled when the key was pressed down it will still call `onKeyUp` on release."
            }
        ],
        "return_type": "void",
        "description": "Registers a keymap that will be triggered whenever `rawKeyIndex` is pressed or released.\n\n`onKeyUp` and `onKeyDown` will not provide any arguments.\n\n```ts\nfunction onStateChange();\n```",
        "examples": [
            {
                "lang": "lua",
                "code": "function on_key_up()\r\n\tprint(\"key no longer pressed\")\r\nend\r\n\r\nfunction on_key_down()\r\n\tprint(\"key is pressed\")\r\nend\r\n\r\nlocal KEY_E = 69\r\nlocal canBeDisabled = false\r\n\r\n\r\nRegisterRawKeymap(\"our_keymap\", on_key_up, on_key_down, KEY_E, canBeDisabled)"
            }
        ],
        "hash": "0x49C1F6DC",
        "ns": "CFX",
        "apiset": "client",
        "game": "rdr3"
    }
}